{"version":3,"sources":["main.min.js","/source/main.js"],"names":["centerLine","document","getElementsByClassName","classList","toggle","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","log","body","getElementsByTagName","mobileNavToggle","getElementById","addEventListener","form","formOpenBtn","formCloseBtn","event","preventDefault","header","onscroll","highLighted","contains","scrollBreak","scrollTop","scrollY"],"mappings":"AAAA,YCkKA,SAASA,cACPC,SAASC,uBAAuB,eAAe,GAAGC,UAAUC,OAAO;;;;;;;;;;;;;;;;;;CAhJrE,WAAY,GAONC,GAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UAET,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0DAIF,kBAAmBC,aACW,WAA7BJ,OAAOC,SAASI,UAAyBP,IAC5CM,UAAUE,cAAcC,SAAS,qBAChCC,KAAK,SAASC,GAIsB,kBAAxBA,GAAaC,QACtBD,EAAaC,SALYD,EASdE,cAAgB,WAK3B,GAAIP,UAAUE,cAAcM,WAAY,CAGtC,GAAIC,GAAmBJ,EAAaK,UAEpCD,GAAiBE,cAAgB,WAC/B,OAAQF,EAAiBG,OACvB,IAAK,YAKH,KAEF,KAAK,YACH,KAAM,IAAIC,OAAM,yDA9B5Bb,SAuCS,SAASc,GAChBC,QAAQC,MAAM,4CAA6CF,KA1DrDC,QAgEFE,IAAI,gBAEZ,IAAMC,GAAO5B,SAAS6B,qBAAqB,QAAQ,GAE7CC,EAAkB9B,SAAS+B,eAAe,qBAChDD,GAAgBE,iBAAiB,QAAS,WACxCJ,EAAK1B,UAAUC,OAAO,cACtBsB,QAAQE,IAAI,8BAvEJ5B,eAqFZ,IAAMkC,MAAOjC,SAAS+B,eAAe,WAI/BG,YAAclC,SAAS+B,eAAe,eACtCI,aAAenC,SAAS+B,eAAe,eAC7CG,aAAYF,iBAAiB,QAAS,WACpCC,KAAK/B,UAAUC,OAAO,gBACtBsB,QAAQE,IAAI,eAEdQ,aAAaH,iBAAiB,QAAS,SAASI,GAC9CA,EAAMC,iBACNZ,QAAQE,IAAI,cACZM,KAAK/B,UAAUC,OAAO,kBAGxB8B,KAAKD,iBAAiB,SAAU,SAASR,GACvCA,EAAEa,iBACFZ,QAAQE,IAAI,iBAkBd,IAAMW,QAAStC,SAAS+B,eAAe,YAEvCzB,QAAOiC,SAAW,WAChB,GAAIC,GAAcF,OAAOpC,UAAUuC,SAAS,eACxCC,EAAc,GACdC,EAAYrC,OAAOsC,OAKnBD,GAAYD,EACTF,IACHf,QAAQE,IAAI,gBACZW,OAAOpC,UAAUC,OAAO,gBAEjBqC,IACTf,QAAQE,IAAI,6BACZW,OAAOpC,UAAUC,OAAO","file":"main.min.js","sourcesContent":["'use strict'; /*!\n               *\n               *  Web Starter Kit\n               *  Copyright 2015 Google Inc. All rights reserved.\n               *\n               *  Licensed under the Apache License, Version 2.0 (the \"License\");\n               *  you may not use this file except in compliance with the License.\n               *  You may obtain a copy of the License at\n               *\n               *    https://www.apache.org/licenses/LICENSE-2.0\n               *\n               *  Unless required by applicable law or agreed to in writing, software\n               *  distributed under the License is distributed on an \"AS IS\" BASIS,\n               *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n               *  See the License for the specific language governing permissions and\n               *  limitations under the License\n               *\n               */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' || \n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' || \n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n\n\n  if ('serviceWorker' in navigator && (\n  window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').\n    then(function (registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();}\n\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' + \n                'service worker became redundant.');\n\n              default:\n              // Ignore\n            }};}};}).\n\n\n\n    catch(function (e) {\n      console.error('Error during service worker registration:', e);});}\n\n\n\n  // ////////////////////////////////////////////////////////\n  // Your custom JavaScript goes here\n  console.log('check one two');\n\n  var body = document.getElementsByTagName('body')[0];\n  // const header = document.getElementById('js-header-2');\n  var mobileNavToggle = document.getElementById('js-mobileNavToggle');\n  mobileNavToggle.addEventListener('click', function () {\n    body.classList.toggle('mobile-nav');\n    console.log('mobileNavToggle just ran');});\n\n\n  // const window = document.getElementBy\n\n  // this runs at page load\n  centerLine();})();\n\n\n// const body = document.getElementsByTagName('body')[0];\n// const header2 = document.getElementById('js-header-2');\n// const window = document.getElementsByTagName(window);\n// const formButton = document.getElementById('js-formButton');\n// const formToggleButtons = document.getElementsByClassName('js-formToggle')[0];\nvar form = document.getElementById('js-form');\n// formButton.addEventListener('click', () => console.log('click') );\n// formButton.addEventListener('click', () => form.style.display = 'block' );\n// formToggleButtons.addEventListener('click', () => form.classList.toggle('form-visible') );\nvar formOpenBtn = document.getElementById('js-formOpen');\nvar formCloseBtn = document.getElementById('js-formClose');\nformOpenBtn.addEventListener('click', function () {\n  form.classList.toggle('form-visible');\n  console.log('form open');});\n\nformCloseBtn.addEventListener('click', function (event) {\n  event.preventDefault();\n  console.log('form close');\n  form.classList.toggle('form-visible');});\n\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  console.log('form submit!');});\n\n\n// add escape key to end form\n/*\ndocument.keyup(function(e) {\n  let formOpen = form.classList.contains('form-visible');\n  if (e.keyCode == 27 && formOpen) { // escape key maps to keycode `27`\n    // <DO YOUR WORK HERE>\n    console.log('close-the-form');\n  }\n});\n*/\n\n/*\nHIGHLIGHTER FUNCTION\n*/\n\nvar header = document.getElementById('js-header');\n\nwindow.onscroll = function () {\n  var highLighted = header.classList.contains('highlighted');\n  var scrollBreak = 40;\n  var scrollTop = window.scrollY;\n  // console.log('SCROLLED +' + window.scrollY );\n  // console.log(scrolled);\n  // console.log(scrollTop);\n\n  if (scrollTop > scrollBreak) {\n    if (!highLighted) {\n      console.log('do something');\n      header.classList.toggle('highlighted');}} else \n\n  if (highLighted) {\n    console.log('highlighted, do something');\n    header.classList.toggle('highlighted');}};\n\n\n\n/** toggle center line */\nfunction centerLine() {\n  document.getElementsByClassName('center-line')[0].classList.toggle('hide');}\n\n\n// toggle mobile nav\n// function toggleMobileNav() {\n//   body.classList.toggle('mobile-nav-hidden');\n//   console.log('mobile-nav ran');\n// }\n\n// function headerDebug() {\n//   header.classList.toggle('debug');\n// }\n//# sourceMappingURL=data:application/json;base64,\n\n\"use strict\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsYW5kaW5nLXBhZ2UuYmFiZWwuanMiLCJzb3VyY2VzQ29udGVudCI6W10sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // ////////////////////////////////////////////////////////\n  // Your custom JavaScript goes here\n  console.log('check one two');\n\n  const body = document.getElementsByTagName('body')[0];\n  // const header = document.getElementById('js-header-2');\n  const mobileNavToggle = document.getElementById('js-mobileNavToggle');\n  mobileNavToggle.addEventListener('click', function() {\n    body.classList.toggle('mobile-nav');\n    console.log('mobileNavToggle just ran');\n  });\n\n  // const window = document.getElementBy\n\n  // this runs at page load\n  centerLine();\n})();\n\n// const body = document.getElementsByTagName('body')[0];\n// const header2 = document.getElementById('js-header-2');\n// const window = document.getElementsByTagName(window);\n// const formButton = document.getElementById('js-formButton');\n// const formToggleButtons = document.getElementsByClassName('js-formToggle')[0];\nconst form = document.getElementById('js-form');\n// formButton.addEventListener('click', () => console.log('click') );\n// formButton.addEventListener('click', () => form.style.display = 'block' );\n// formToggleButtons.addEventListener('click', () => form.classList.toggle('form-visible') );\nconst formOpenBtn = document.getElementById('js-formOpen');\nconst formCloseBtn = document.getElementById('js-formClose');\nformOpenBtn.addEventListener('click', function() {\n  form.classList.toggle('form-visible');\n  console.log('form open');\n});\nformCloseBtn.addEventListener('click', function(event) {\n  event.preventDefault();\n  console.log('form close');\n  form.classList.toggle('form-visible');\n});\n\nform.addEventListener('submit', function(e) {\n  e.preventDefault();\n  console.log('form submit!');\n});\n\n// add escape key to end form\n/*\ndocument.keyup(function(e) {\n  let formOpen = form.classList.contains('form-visible');\n  if (e.keyCode == 27 && formOpen) { // escape key maps to keycode `27`\n    // <DO YOUR WORK HERE>\n    console.log('close-the-form');\n  }\n});\n*/\n\n/*\nHIGHLIGHTER FUNCTION\n*/\n\nconst header = document.getElementById('js-header');\n\nwindow.onscroll = function() {\n  let highLighted = header.classList.contains('highlighted');\n  let scrollBreak = 40;\n  let scrollTop = window.scrollY;\n  // console.log('SCROLLED +' + window.scrollY );\n  // console.log(scrolled);\n  // console.log(scrollTop);\n\n  if (scrollTop > scrollBreak) {\n    if (!highLighted) {\n      console.log('do something');\n      header.classList.toggle('highlighted');\n    }\n  } else if (highLighted) {\n    console.log('highlighted, do something');\n    header.classList.toggle('highlighted');\n  }\n};\n\n/** toggle center line */\nfunction centerLine() {\n  document.getElementsByClassName('center-line')[0].classList.toggle('hide');\n}\n\n// toggle mobile nav\n// function toggleMobileNav() {\n//   body.classList.toggle('mobile-nav-hidden');\n//   console.log('mobile-nav ran');\n// }\n\n// function headerDebug() {\n//   header.classList.toggle('debug');\n// }\n"],"sourceRoot":"/source/"}